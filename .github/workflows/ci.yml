name: CI
on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        branch: [master]
        target:
          - os: linux
            cpu: amd64
            TEST_LANG: c
          - os: linux
            cpu: amd64
            TEST_LANG: cpp
        include:
          - target:
              os: linux
            builder: ubuntu-18.04

    name: '${{ matrix.target.os }}-${{ matrix.target.cpu }}-${{ matrix.target.TEST_LANG }} (${{ matrix.branch }})'
    runs-on: ${{ matrix.builder }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: nim-result
          submodules: false

      - name: Get latest nimbus-build-system commit hash
        id: versions
        shell: bash
        run: |
          getHash() {
            git ls-remote "https://github.com/$1" "${2:-HEAD}" | cut -f 1
          }
          nbsHash=$(getHash status-im/nimbus-build-system)
          echo "::set-output name=nimbus_build_system::$nbsHash"

      - name: Restore prebuilt Nim from cache
        id: nim-cache
        uses: actions/cache@v2
        with:
          path: nim
          key: 'nim-${{ matrix.target.os }}-${{ matrix.target.cpu }}-${{ steps.versions.outputs.nimbus_build_system }}'

      - name: Build Nim and associated tools
        if: steps.nim-cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          curl -O -L -s -S https://raw.githubusercontent.com/status-im/nimbus-build-system/master/scripts/build_nim.sh
          if [[ '${{ matrix.target.cpu }}' == 'amd64' ]]; then
            PLATFORM=x64
          else
            PLATFORM=x86
          fi
          if [[ '${{ matrix.target.os }}' == 'windows' ]]; then
            MAKE_CMD="mingw32-make"
          else
            MAKE_CMD="make"
          fi
          env MAKE="$MAKE_CMD -j2" ARCH_OVERRIDE=$PLATFORM CC=gcc bash build_nim.sh nim csources dist/nimble NimBinaries

          # clean up to save cache space
          cd nim
          rm koch
          rm -rf nimcache
          rm -rf csources
          rm -rf tests
          rm -rf dist
          rm -rf .git

      - name: Setup environment
        shell: bash
        run: echo '${{ github.workspace }}/nim/bin' >> $GITHUB_PATH

      - name: Run tests
        shell: bash
        working-directory: nim-result
        run: |
          env TEST_LANG="${{ matrix.target.TEST_LANG }}" nimble test

